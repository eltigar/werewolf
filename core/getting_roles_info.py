import json
from dataclasses import dataclass

# main data in russian & translation to english
ROLES_DATA = [{'name': '–°—Ç—Ä–∞–∂–Ω–∏–∫', 'description': '–ü—Ä–∏ —É—á–∞—Å—Ç–∏–∏ –≤ –∏–≥—Ä–µ –°—Ç—Ä–∞–∂–Ω–∏–∫–∞, –ø–æ–ª–æ–∂–∏—Ç–µ –ª—é–±–æ–π –∂–µ—Ç–æ–Ω –∏–ª–∏ –º–æ–Ω–µ—Ç—É –≤ —Ü–µ–Ω—Ç—Ä —Å—Ç–æ–ª–∞ –ø—Ä–∏ —Ä–∞–∑–¥–∞—á–µ –∫–∞—Ä—Ç. –°—Ç—Ä–∞–∂–Ω–∏–∫ –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –ø–µ—Ä–≤—ã–º –∏ –º–æ–∂–µ—Ç –ø–æ–ª–æ–∂–∏—Ç—å –∂–µ—Ç–æ–Ω –°—Ç—Ä–∞–∂–Ω–∏–∫–∞ –ø–æ–≤–µ—Ä—Ö –ª—é–±–æ–π –∫–∞—Ä—Ç—ã –Ω–∞ —Å—Ç–æ–ª–µ, –∫—Ä–æ–º–µ —Å–≤–æ–µ–π. –ò–≥—Ä–æ–∫–∏ –±–æ–ª—å—à–µ –Ω–µ –º–æ–≥—É—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –Ω–∞–∫—Ä—ã—Ç–æ–π –∫–∞—Ä—Ç–æ–π –Ω–æ—á—å—é. –≠—Ç–æ –ø—Ä–∞–≤–∏–ª–æ —Å–∏–ª—å–Ω–µ–µ –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –ø—Ä–∞–≤–∏–ª.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üõ°', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–î–≤–æ–π–Ω–∏–∫', 'description': '–î–≤–æ–π–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞. –û–Ω —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –¥–≤–æ–π–Ω–∏–∫–æ–º –ø–æ–¥—Å–º–æ—Ç—Ä–µ–Ω–Ω–æ–π —Ä–æ–ª–∏, –∞ –µ–≥–æ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è –∫–∞—Ä—Ç–∞ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç —Ü–≤–µ—Ç —ç—Ç–æ–π —Ä–æ–ª–∏ –¥–æ –∫–æ–Ω—Ü–∞ –∏–≥—Ä—ã. –ï—Å–ª–∏ –æ–Ω –ø–æ–¥—Å–º–æ—Ç—Ä–µ–ª –∫–∞—Ä—Ç—É –Ω–æ—á–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è —Å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ–º –∏/–∏–ª–∏ –ø—Ä–æ—Å–º–æ—Ç—Ä–æ–º –∫–∞—Ä—Ç (–ë–∞–ª–∞–º—É—Ç, –®–∞–º–∞–Ω, –ü—Ä–æ–≤–∏–¥–µ—Ü, –í–æ—Ä–∏—à–∫–∞), –æ–Ω –¥–µ–ª–∞–µ—Ç –ø—Ä–µ–¥–ø–∏—Å–∞–Ω–Ω–æ–µ –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ; –µ—Å–ª–∏ –∫–∞—Ä—Ç—É –∫–æ–º–∞–Ω–¥—ã (–í–µ—Ä–≤—É–ª—å—Ñ, –ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫, –¢–∏–≥–∞—Ä) ‚Äî –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –µ—â–µ —Ä–∞–∑ —Å–æ —Å–≤–æ–µ–π –Ω–æ–≤–æ–π –∫–æ–º–∞–Ω–¥–æ–π, –±—É–¥—Ç–æ –µ–º—É –±—ã–ª–∞ —Ä–æ–∑–¥–∞–Ω–∞ —Ç–∞–∫–∞—è –∫–∞—Ä—Ç–∞. –í —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ –æ–Ω –ø–æ–¥—Å–º–æ—Ç—Ä–µ–ª –∫–∞—Ä—Ç—É, –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞—é—â—É—é –ø—Ä–µ–¥—É—Ç—Ä–µ–Ω–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è (–†–µ–≤–∏–∑–æ—Ä, –ò–Ω—Ç—Ä–∏–≥–∞–Ω, –ü—å—è–Ω–∏—Ü–∞, –ñ–∞–≤–æ—Ä–æ–Ω–æ–∫), –æ–Ω –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –µ—â–µ —Ä–∞–∑ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–º —Å–ª–æ—Ç–µ –ø–µ—Ä–µ–¥ —É—Ç—Ä–æ–º.', 'team': 'green', 'team_emoji': '‚óΩÔ∏è', 'emoji': 'üé≠', 'second_wakeup': True, 'max_quantity': 1}, {'name': '–í–æ–∂–∞–∫', 'description': '–í–æ–∂–∞–∫ –∏–≥—Ä–∞–µ—Ç –∑–∞ –∫—Ä–∞—Å–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –ù–∞ —Å–≤–æ–µ–º —Ö–æ–¥—É –æ–Ω –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –∏ –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –ª—é–±–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –æ–Ω –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–µ—Ç—Å—è –∫ –æ—Å—Ç–∞–ª—å–Ω—ã–º –í–µ—Ä–≤—É–ª—å—Ñ–∞–º: –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –Ω–∞ –∏—Ö —Ö–æ–¥—É (—Å —Ç–∞–∫–æ–π –∂–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –≤ —Ü–µ–Ω—Ç—Ä–µ) –∏ –ø–æ–¥–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö –Ω–∞ —Ö–æ–¥—É –ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫–∞.', 'team': 'red', 'team_emoji': 'üîª', 'emoji': 'üê∫', 'second_wakeup': True, 'max_quantity': 1}, {'name': '–í–µ—Ä–≤—É–ª—å—Ñ', 'description': '–í–µ—Ä–≤—É–ª—å—Ñ—ã –∏–≥—Ä–∞—é—Ç –∑–∞ –∫—Ä–∞—Å–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –ù–æ—á—å—é –æ–Ω–∏ –ø—Ä–æ—Å—ã–ø–∞—é—Ç—Å—è –∏ –∑–Ω–∞–∫–æ–º—è—Ç—Å—è. –ï—Å–ª–∏ –≤ —ç—Ç–æ—Ç –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Å–Ω—É–ª—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –∏–≥—Ä–æ–∫, –æ–Ω –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –≤—ã–±–æ—Ä –æ–¥–Ω—É –∫–∞—Ä—Ç—É –≤ —Ü–µ–Ω—Ç—Ä–µ —Å—Ç–æ–ª–∞. –¢–∞–∫–∂–µ –í–µ—Ä–≤—É–ª—å—Ñ—ã –ø–æ–¥–Ω–∏–º–∞—é—Ç –±–æ–ª—å—à–æ–π –ø–∞–ª–µ—Ü –≤–≤–µ—Ä—Ö –Ω–∞ —Ö–æ–¥—É –ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫–∞.', 'team': 'red', 'team_emoji': 'üîª', 'emoji': 'üê∫', 'second_wakeup': False, 'max_quantity': 3}, {'name': '–ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫', 'description': '–ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫ –∏–≥—Ä–∞–µ—Ç –∑–∞ –∫—Ä–∞—Å–Ω—É—é –∫–æ–º–∞–Ω–¥—É, –Ω–æ —Ü–≤–µ—Ç –µ–≥–æ –∫–∞—Ä—Ç—ã ‚Äî –∑–µ–ª–µ–Ω—ã–π, —Ç–∞–∫ —á—Ç–æ –æ–Ω –º–æ–∂–µ—Ç –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞—Ç—å —Å–æ–±–æ–π –Ω–∞ –≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–∏ —Ä–∞–¥–∏ –ø–æ–±–µ–¥—ã –∫—Ä–∞—Å–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã. –ù–∞ —Ö–æ–¥—É –ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫–∞ –í–µ—Ä–≤—É–ª—å—Ñ—ã (–∏ –í–æ–∂–∞–∫) —Å –∑–∞–∫—Ä—ã—Ç—ã–º–∏ –≥–ª–∞–∑–∞–º–∏ –ø–æ–¥–Ω–∏–º–∞—é—Ç –±–æ–ª—å—à–∏–µ –ø–∞–ª—å—Ü—ã –≤–≤–µ—Ä—Ö. –í —Å–ª—É—á–∞–µ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –∑–∞ —Å—Ç–æ–ª–æ–º –∫—Ä–∞—Å–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤ –ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫ –¥–æ–ª–∂–µ–Ω –Ω–µ –¥–æ–ø—É—Å—Ç–∏—Ç—å –º–∏—Ä–Ω–æ–≥–æ –¥–Ω—è.', 'team': 'red', 'team_emoji': 'üîª', 'emoji': 'üë•', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–¢–∏–≥–∞—Ä', 'description': '–¢–∏–≥–∞—Ä—ã –∏–≥—Ä–∞—é—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω–∏ –º–æ–≥—É—Ç –æ—Ç–∫—Ä—ã—Ç—å –≥–ª–∞–∑–∞ –∏ —É–≤–∏–¥–µ—Ç—å –¥—Ä—É–≥ –¥—Ä—É–≥–∞, –¥—Ä—É–≥–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π –Ω–µ —Å–æ–≤–µ—Ä—à–∞—é—Ç.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'ü¶Å', 'second_wakeup': False, 'max_quantity': 3}, {'name': '–®–µ—Ä–∏—Ñ', 'description': '–®–µ—Ä–∏—Ñ –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –ª—é–±–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üëÆ\u200d‚ôÇÔ∏è', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–ü—Ä–æ–≤–∏–¥–µ—Ü', 'description': '–ü—Ä–æ–≤–∏–¥–µ—Ü –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –Ω–∞ –≤—ã–±–æ—Ä –¥–≤–µ –∏–∑ —Ç—Ä–µ—Ö –∫–∞—Ä—Ç, –ª–µ–∂–∞—â–∏—Ö –≤ —Ü–µ–Ω—Ç—Ä–µ —Å—Ç–æ–ª–∞.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üëÅ', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–†–µ–≤–∏–∑–æ—Ä', 'description': '–†–µ–≤–∏–∑–æ—Ä –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ä—Ç—É –ª—é–±–æ–≥–æ –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞. –ï—Å–ª–∏ –æ–Ω –ø–æ–¥—Å–º–æ—Ç—Ä–µ–ª –∫–∞—Ä—Ç—É –í–µ—Ä–≤—É–ª—å—Ñ–∞ –∏–ª–∏ –ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫–∞, –æ–Ω –¥–æ–ª–∂–µ–Ω –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ–±—ä—è–≤–∏—Ç—å –æ–± —ç—Ç–æ–º –∏ –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ–º —Å–≤–æ—é –∫–∞—Ä—Ç—É. –ò–≥—Ä–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è, –∏ –∑–µ–ª–µ–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üïµÔ∏è', 'second_wakeup': True, 'max_quantity': 1}, {'name': '–ò–Ω—Ç—Ä–∏–≥–∞–Ω', 'description': '–ò–Ω—Ç—Ä–∏–≥–∞–Ω –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –æ–¥–Ω–∏–º –∏–∑ –ø–µ—Ä–≤—ã—Ö –∏ –º–æ–∂–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –∫–∞—Ä—Ç—ã –¥–≤—É—Ö –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤; –∞ –≤ –∫–æ–Ω—Ü–µ –Ω–æ—á–∏ - –ø—Ä–æ—Å—ã–ø–∞–µ—Ç—Å—è –µ—â—ë —Ä–∞–∑ –∏ –º–µ–Ω—è–µ—Ç –∫–∞—Ä—Ç—ã —Ç–µ—Ö –∂–µ –∏–≥—Ä–æ–∫–æ–≤ –µ—â–µ —Ä–∞–∑ (–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ, –µ—Å–ª–∏ –±—ã–ª–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–∞ –ø–µ—Ä–≤–∞—è –∑–∞–º–µ–Ω–∞ –∫–∞—Ä—Ç). –ò–Ω—Ç—Ä–∏–≥–∞–Ω –Ω–µ —Å–º–æ—Ç—Ä–∏—Ç –ø–µ—Ä–µ–º–µ—â–∞–µ–º—ã–µ –∫–∞—Ä—Ç—ã.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üß∂', 'second_wakeup': True, 'max_quantity': 1}, {'name': '–í–æ—Ä–∏—à–∫–∞', 'description': '–í–æ—Ä–∏—à–∫–∞ –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –º–æ–∂–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å—Å—è –∫–∞—Ä—Ç–æ–π —Å –¥—Ä—É–≥–∏–º –∏–≥—Ä–æ–∫–æ–º –∏ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –Ω–æ–≤—É—é —Ä–æ–ª—å. –°–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –Ω–æ–≤—É—é —Ä–æ–ª—å –¥–æ –∑–∞–º–µ–Ω—ã –≤–æ—Ä–∏—à–∫–∞ –Ω–µ –º–æ–∂–µ—Ç.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üëù', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–ë–∞–ª–∞–º—É—Ç', 'description': '–ë–∞–ª–∞–º—É—Ç –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –º–æ–∂–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏ –∫–∞—Ä—Ç—ã –¥–≤—É—Ö –¥—Ä—É–≥–∏—Ö –∏–≥—Ä–æ–∫–æ–≤. –ù–µ —Å–º–æ—Ç—Ä–∏—Ç –ø–µ—Ä–µ–º–µ—â–∞–µ–º—ã–µ –∫–∞—Ä—Ç—ã.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üåö', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–®–∞–º–∞–Ω', 'description': '–®–∞–º–∞–Ω –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –º–æ–∂–µ—Ç –ø–æ–º–µ–Ω—è—Ç—å –∫–∞—Ä—Ç—É –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞ —Å –∫–∞—Ä—Ç–æ–π –≤ —Ü–µ–Ω—Ç—Ä–µ. –ù–µ —Å–º–æ—Ç—Ä–∏—Ç –ø–µ—Ä–µ–º–µ—â–∞–µ–º—ã–µ –∫–∞—Ä—Ç—ã.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üíÜ', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–ü—å—è–Ω–∏—Ü–∞', 'description': '–ü—å—è–Ω–∏—Ü–∞ –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –¥–æ–ª–∂–µ–Ω –ø–æ–º–µ–Ω—è—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É —Å –∫–∞—Ä—Ç–æ–π –≤ —Ü–µ–Ω—Ç—Ä–µ. –ü–µ—Ä–µ–¥ —ç—Ç–∏–º –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É. –ö–∞—Ä—Ç—É –∏–∑ —Ü–µ–Ω—Ç—Ä–∞ —Å–º–æ—Ç—Ä–µ—Ç—å –Ω–µ–ª—å–∑—è.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': 'üçª', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–ñ–∞–≤–æ—Ä–æ–Ω–æ–∫', 'description': '–ñ–∞–≤–æ—Ä–æ–Ω–æ–∫ –∏–≥—Ä–∞–µ—Ç –∑–∞ –∑–µ–ª–µ–Ω—É—é –∫–æ–º–∞–Ω–¥—É. –û–Ω –º–æ–∂–µ—Ç –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–≤–æ—é –∫–∞—Ä—Ç—É –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏–π.', 'team': 'green', 'team_emoji': 'üü¢', 'emoji': '‚è∞', 'second_wakeup': False, 'max_quantity': 1}, {'name': '–ö–∞–º–∏–∫–∞–¥–∑–µ', 'description': '–ö–∞–º–∏–∫–∞–¥–∑–µ –∏–≥—Ä–∞–µ—Ç –∑–∞ —Å–∏–Ω—é—é –∫–æ–º–∞–Ω–¥—É. –ù–æ—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –æ–Ω –Ω–µ —Å–æ–≤–µ—Ä—à–∞–µ—Ç.', 'team': 'blue', 'team_emoji': 'üî∑', 'emoji': 'üíÄ', 'second_wakeup': False, 'max_quantity': 1}]
TRANSLATIONS_DATA = {'en': {'–°—Ç—Ä–∞–∂–Ω–∏–∫': {'name': 'Guard', 'description': 'When the Guard is in the game, place any token or coin in the center of the table when dealing cards. The Guard wakes up first and can put the Guard token on top of any card on the table, except his own. Players can no longer interact with the covered card at night. This rule is stronger than all other rules.'}, '–î–≤–æ–π–Ω–∏–∫': {'name': 'Doppelganger', 'description': "The Doppelganger must look at another player's card. He becomes a doppelganger of the role he spied on, and his own card takes on the color of that role until the end of the game. If he looked at a night action card with movement and/or card viewing (Troublemaker, Shaman, Seer, Robber), he performs the prescribed action immediately; if a team card (Werewolf, Minion, Tigar) - he wakes up again with his new team, as if he was dealt such a card. If he looked at a card implying pre-morning actions (Inspector, Intriguer, Drunk, Morninger), he wakes up again in a separate time slot before morning."}, '–í–æ–∂–∞–∫': {'name': 'Alpha', 'description': "The Alpha plays for the red team. On his turn, he wakes up and can look at any other player's card. After that, he joins the rest of the Werewolves: he wakes up on their turn (with the same opportunity to look at a card in the center) and raises his thumb up on the Minion's turn."}, '–í–µ—Ä–≤—É–ª—å—Ñ': {'name': 'Werewolf', 'description': "The Werewolves play for the red team. At night they wake up and get acquainted. If only one player woke up at this moment, he can choose to look at one card in the center of the table. Also, the Werewolves raise their thumb up on the Minion's turn."}, '–ü—Ä–∏—Å–ø–µ—à–Ω–∏–∫': {'name': 'Minion', 'description': "The Minion plays for the red team, but the color of his card is green, so he can sacrifice himself in the vote for the victory of the red team. On the Minion's turn, the Werewolves (and the Alpha) with their eyes closed raise their thumbs up. In the absence of red players at the table, the Minion must prevent a peaceful day."}, '–¢–∏–≥–∞—Ä': {'name': 'Tigar', 'description': 'The Tigars play for the green team. They can open their eyes and see each other, they do not perform other actions.'}, '–®–µ—Ä–∏—Ñ': {'name': 'Sheriff', 'description': "The Sheriff plays for the green team. He can look at any other player's card."}, '–ü—Ä–æ–≤–∏–¥–µ—Ü': {'name': 'Seer', 'description': 'The Seer plays for the green team. He can choose to look at two of the three cards lying in the center of the table.'}, '–†–µ–≤–∏–∑–æ—Ä': {'name': 'Inspector', 'description': "The Inspector plays for the green team. He can look at any other player's card. If he looked at the Werewolf or Minion card, he must immediately announce this and show everyone his card. The game ends, and the green team wins."}, '–ò–Ω—Ç—Ä–∏–≥–∞–Ω': {'name': 'Intriguer', 'description': 'The Intriguer plays for the green team. He wakes up as one of the first and can swap the cards of two other players; and at the end of the night - wakes up again and changes the cards of the same players again (mandatory if the first card replacement was made). The Intriguer does not look at the moved cards.'}, '–í–æ—Ä–∏—à–∫–∞': {'name': 'Robber', 'description': 'The Robber plays for the green team. He can swap his card with another player and look at his new role. The Robber cannot look at his new role before the swap.'}, '–ë–∞–ª–∞–º—É—Ç': {'name': 'Troublemaker', 'description': 'The Troublemaker plays for the green team. He can swap the cards of two other players. He does not look at the moved cards.'}, '–®–∞–º–∞–Ω': {'name': 'Shaman', 'description': "The Shaman plays for the green team. He can swap another player's card with a card in the center. He does not look at the moved cards."}, '–ü—å—è–Ω–∏—Ü–∞': {'name': 'Drunk', 'description': 'The Drunk plays for the green team. He must swap his card with a card in the center. He can look at his card before this. He cannot look at the card from the center.'}, '–ñ–∞–≤–æ—Ä–æ–Ω–æ–∫': {'name': 'Morninger', 'description': 'The Morninger plays for the green team. He can look at his card after all the movements.'}, '–ö–∞–º–∏–∫–∞–¥–∑–µ': {'name': 'Suicidal', 'description': 'The Suicidal plays for the blue team. He does not perform any night actions.'}}}
update_data = False
# last updated 2024-01-28

# –í—ã–±–æ—Ä —è–∑—ã–∫–∞
language: str = 'ru'

if update_data:  # variables above should be manually updated
    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–æ–ª—è—Ö –∏–∑ —Ñ–∞–π–ª–∞
    file_path = 'roles.json'
    with open(file_path, 'r', encoding='utf-8') as file:
        ROLES_DATA = json.load(file)
    print(ROLES_DATA)

    # –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–µ—Ä–µ–≤–æ–¥–∞—Ö –∏–∑ —Ñ–∞–π–ª–∞
    translations_file_path = 'translations.json'
    with open(translations_file_path, 'r', encoding='utf-8') as file:
        TRANSLATIONS_DATA: dict = json.load(file)
    print(TRANSLATIONS_DATA)

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —è–∑—ã–∫–æ–≤
LANG_LIST = TRANSLATIONS_DATA.keys()




# –°–æ–∑–¥–∞–Ω–∏–µ dataclass –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–æ–ª—è—Ö
@dataclass
class Role:
    name: str
    description: str
    team: str
    team_emoji: str
    emoji: str
    second_wakeup: bool
    max_quantity: int
    lang: str = "ru"

    def __post_init__(self):
        self.ru_name = self.name  # so all langs have main lang nae inside
        if self.lang in LANG_LIST:
            translated_role_data = TRANSLATIONS_DATA.get(self.lang, {}).get(self.name, {})
            self.name = translated_role_data.get('name', self.name)
            self.description = translated_role_data.get('description', self.description)

    def __str__(self):
        return f"{self.team_emoji} *{self.name}*"

    def __repr__(self):
        return (f"Role(name={self.name}:description={self.description}, team={self.team}, "
                f"team_emoji={self.team_emoji}, emoji={self.emoji}, second_wakeup={self.second_wakeup}, "
                f"max_quantity={self.max_quantity})")


def create_objects_dict(roles_data):
    return {role.ru_name: role for role in [Role(**role_data, lang=language) for role_data in roles_data]}


roles_dict: dict[str, Role] = create_objects_dict(ROLES_DATA)


test = False
if test:
    roles_dict = create_objects_dict(ROLES_DATA)
    en_roles_dict = {role.ru_name: role for role in [Role(**role_data, lang='en') for role_data in ROLES_DATA]}
    # print("\n".join(str(role.ru_name) for role in roles_dict.values()))
    # print("\n".join(str(role.ru_name) for role in en_roles_dict.values()))
    # print(roles_dict)
    # print(en_roles_dict)
    print(ROLES_DATA)
    print(TRANSLATIONS_DATA)

